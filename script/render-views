#!/usr/bin/env node
const globby = require('globby')
const nunjucks = require('nunjucks')
const mkdirp = require('mkdirp')
const yaml = require('js-yaml')
const { basename, join } = require('path')
const { readFileSync, writeFileSync } = require('fs')

const outDir = join(__dirname, '../dist')

const data = require('../views/data')
const examples = yaml.safeLoad(readFileSync('src/examples.yml', 'utf8'))
data.examples = examples.sort((a, b) => a.title.localeCompare(b.title))

const env = nunjucks.configure(join(__dirname, '../views'))

console.warn('finding views...')

globby('views/*.html')
  .then(paths => {
    for (const templatePath of paths) {
      const filename = basename(templatePath)
      console.warn('rendering "%s"...', filename)
      const output = env.render(filename, data)
      const outPath = join(outDir, filename)
      console.warn('writing "%s"...', outPath)
      writeFileSync(outPath, output, 'utf8')
    }
  })
  .then(async () => {
    const exDir = join(outDir, 'examples')
    await mkdirp(exDir)
    for (const example of examples) {
      console.warn('rendering example "%s"...', example.id)
      const output = env.render('example.html', Object.assign({ example }, data))
      const outPath = join(exDir, `${example.id}.html`)
      writeFileSync(outPath, output, 'utf8')
    }
  })
